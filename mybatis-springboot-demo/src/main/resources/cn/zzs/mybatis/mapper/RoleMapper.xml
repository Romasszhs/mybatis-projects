<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zzs.mybatis.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="Role">
    <constructor>
      <idArg column="role_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="gmt_create" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="gmt_modified" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="role_name" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, gmt_create, gmt_modified, role_name
  </sql>
  
   <!-- 关联查询User的查询字段 -->
  <sql id="Related_User_Column_List">
          u.`user_id`,
          u.`user_age`,
          u.`gmt_create` a,
          u.`gmt_modified` b,
          u.`user_name`,
          u.`user_role_id`,
          r.`role_id`,
          r.`gmt_create` ,
          r.`gmt_modified` ,
          r.`role_name` 
  </sql>
  
  <!-- 关联查询User的Example条件拼接语句 -->
   <sql id="Related_User_Example_Where_Clause">
    <where>
        and u.`user_role_id` = r.`role_id`  
      <trim prefix="and(" suffix=")">  
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and r.${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and r.${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and r.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and r.${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
      </trim>
    </where>
  </sql>
    
    <!-- 关联查询User的ResultMap -->
   <resultMap id="RoleUserResultMap" type="Role">
      <id property="id" column="role_id"/>
      <result property="name" column="role_name"/>
      <result property="create" column="gmt_create"/>
      <result property="modified" column="gmt_modified"/>
      <collection property="users" ofType="User">
          <id property="id" column="user_id" />
          <result property="name"  column="user_name"/>
          <result property="age" column="user_age"/>
          <result property="create" column="a"/>
          <result property="modified" column="b"/>
          <result property="roleId" column="role_id"/>
      </collection>
  </resultMap>
  
  <!-- 根据id查询角色并查询用户 -->
  <select id="selectRelatedUserByPrimaryKey" parameterType="java.lang.Long" resultMap="RoleUserResultMap">
      SELECT 
  <include refid="Related_User_Column_List" />
        FROM
          `mybatis_user` u,`mybatis_role` r 
        WHERE 
          u.`user_role_id` = r.`role_id` 
        AND
          r.`role_id` = #{id,jdbcType=BIGINT}
  </select>
  
  <!-- 根据Example查询角色并查询用户 -->
  <select id="selectRelatedUserByExample" parameterType="RoleExample" resultMap="RoleUserResultMap">
      select 
    <if test="distinct">
      distinct 
    </if>
    <include refid="Related_User_Column_List"/>
    from `mybatis_user` u,`mybatis_role` r  
    <if test="_parameter != null">
      <include refid="Related_User_Example_Where_Clause" />
    </if>
    <if test="_parameter != null">
      where u.`user_role_id` = r.`role_id` 
    </if>	
    <if test="orderByClause != null">
      order by r.${orderByClause}
    </if>
  </select>
  
   <!-- 关联查询Menu的查询字段 -->
  <sql id="Related_Menu_Column_List">
     r.`role_id`,
     r.`gmt_create`,
     r.`gmt_modified`,
     r.`role_name`,
     m.`menu_id`,
     m.`gmt_create` a,
     m.`gmt_modified` b,
     m.`menu_name`,
     m.`menu_order`,
     m.`menu_url`,
     m.`menu_parent_id` 
  </sql>
  
  <!-- 关联查询Menu的Example条件拼接语句 -->
   <sql id="Related_Menu_Example_Where_Clause">
    <where>
        and rm.`role_id` = r.`role_id`  and  rm.`menu_id` = m.`menu_id` 
      <trim prefix="and(" suffix=")">  
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and r.${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and r.${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and r.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and r.${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
      </trim>
    </where>
  </sql>

   <!-- 关联查询Menu的ResultMap -->
   <resultMap id="RoleMenuResultMap" type="Role">
      <id property="id" column="role_id"/>
      <result property="name" column="role_name"/>
      <result property="create" column="gmt_create"/>
      <result property="modified" column="gmt_modified"/>
      <collection property="menus" ofType="Menu">
          <id property="id" column="menu_id" />
          <result property="create"  column="a"/>
          <result property="modified" column="b"/>
          <result property="name" column="menu_name"/>
          <result property="order" column="menu_order"/>
          <result property="url" column="menu_url"/>
          <result property="parentId" column="menu_parent_id"/>
      </collection>
  </resultMap>
    
  <!-- 根据id查询角色并查询菜单 -->
  <select id="selectRelatedMenuByPrimaryKey" parameterType="java.lang.Long" resultMap="RoleMenuResultMap">
      SELECT 
  <include refid="Related_Menu_Column_List" />
        FROM
		  `mybatis_role_menu` rm,  
		  `mybatis_role` r, 
		  `mybatis_menu` m 
		WHERE 
		  rm.`role_id` = r.`role_id` 
		AND
		  rm.`menu_id` = m.`menu_id` 
		AND
          r.`role_id` = #{id,jdbcType=BIGINT}
  </select>
  
  <!-- 根据Example查询角色并查询菜单 -->
  <select id="selectRelatedMenuByExample" parameterType="RoleExample" resultMap="RoleMenuResultMap">
      select 
    <if test="distinct">
      distinct 
    </if>
    <include refid="Related_Menu_Column_List"/>
      FROM
        `mybatis_role_menu` rm,  
        `mybatis_role` r, 
        `mybatis_menu` m 
    <if test="_parameter != null">
      <include refid="Related_Menu_Example_Where_Clause" />
    </if>
    <if test="_parameter != null">
     where rm.`role_id` = r.`role_id`  and  rm.`menu_id` = m.`menu_id`  
    </if>	
    <if test="orderByClause != null">
      order by r.${orderByClause}
    </if>
  </select>
  
  <!-- 设置用户的权限菜单 -->
  <insert id="setMenuByPrimaryKey" >
    insert into `mybatis_role_menu` values(#{id},#{menuId})
  </insert>
     
  <select id="selectByExample" parameterType="RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mybatis_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mybatis_role
    where role_id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from mybatis_role
    where role_id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="RoleExample">
    delete from mybatis_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <!-- 插入角色且返回生成的主键 -->
  <insert id="insert" parameterType="Role" useGeneratedKeys="true" keyProperty="id">
    insert into mybatis_role (role_id, gmt_create, gmt_modified, 
      role_name)
    values (#{id,jdbcType=BIGINT}, #{create,jdbcType=TIMESTAMP}, #{modified,jdbcType=TIMESTAMP}, 
      #{name,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="Role">
    insert into mybatis_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        role_id,
      </if>
      <if test="create != null">
        gmt_create,
      </if>
      <if test="modified != null">
        gmt_modified,
      </if>
      <if test="name != null">
        role_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="create != null">
        #{create,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null">
        #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="RoleExample" resultType="java.lang.Long">
    select count(*) from mybatis_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mybatis_role
    <set>
      <if test="record.id != null">
        role_id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.create != null">
        gmt_create = #{record.create,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modified != null">
        gmt_modified = #{record.modified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.name != null">
        role_name = #{record.name,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mybatis_role
    set role_id = #{record.id,jdbcType=BIGINT},
      gmt_create = #{record.create,jdbcType=TIMESTAMP},
      gmt_modified = #{record.modified,jdbcType=TIMESTAMP},
      role_name = #{record.name,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="Role">
    update mybatis_role
    <set>
      <if test="create != null">
        gmt_create = #{create,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null">
        gmt_modified = #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        role_name = #{name,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="Role">
    update mybatis_role
    set gmt_create = #{create,jdbcType=TIMESTAMP},
      gmt_modified = #{modified,jdbcType=TIMESTAMP},
      role_name = #{name,jdbcType=VARCHAR}
    where role_id = #{id,jdbcType=BIGINT}
  </update>
</mapper>