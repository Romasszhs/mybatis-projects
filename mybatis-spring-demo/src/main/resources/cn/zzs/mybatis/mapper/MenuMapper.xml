<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zzs.mybatis.mapper.MenuMapper">
  <resultMap id="BaseResultMap" type="cn.zzs.mybatis.pojo.Menu">
    <constructor>
      <idArg column="menu_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="gmt_create" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="gmt_modified" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="menu_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="menu_order" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="menu_url" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="menu_parent_id" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    menu_id, gmt_create, gmt_modified, menu_name, menu_order, menu_url, menu_parent_id
  </sql>
  
   <!-- 关联查询Role的查询字段 -->
  <sql id="Related_Role_Column_List">
     r.`role_id`,
     r.`gmt_create`,
     r.`gmt_modified`,
     r.`role_name`,
     m.`menu_id`,
     m.`gmt_create`,
     m.`gmt_modified`,
     m.`menu_name`,
     m.`menu_order`,
     m.`menu_url`,
     m.`menu_parent_id` 
  </sql>
  
  <!-- 关联查询Menu的Example条件拼接语句 -->
   <sql id="Related_Role_Example_Where_Clause">
    <where>
        rm.`role_id` = r.`role_id`  and  rm.`menu_id` = m.`menu_id`  
      <trim prefix="and (" suffix=")">  
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and m.${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and m.${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and m.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and m.${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
      </trim>
    </where>
  </sql>  
  
   <!-- 关联查询Role的ResultMap -->
   <resultMap id="MenuRoleResultMap" type="Menu">
      <id property="id" column="menu_id" />
      <result property="create"  column="gmt_create"/>
      <result property="modified" column="gmt_modified"/>
      <result property="name" column="menu_name"/>
      <result property="order" column="menu_order"/>
      <result property="url" column="menu_url"/>
      <result property="parentId" column="menu_parent_id"/>
      <collection property="roles" ofType="Role">
          <id property="id" column="role_id"/>
          <result property="name" column="role_name"/>
          <result property="create" column="gmt_create"/>
          <result property="modified" column="gmt_modified"/>          
      </collection>
  </resultMap>  
    
 <!-- 根据id查询菜单并查询角色 -->
  <select id="selectRelatedRoleByPrimaryKey" parameterType="java.lang.String" resultMap="MenuRoleResultMap">
      SELECT 
  <include refid="Related_Role_Column_List" />
        FROM
          `mybatis_role_menu` rm,  
          `mybatis_role` r, 
          `mybatis_menu` m 
        WHERE 
          rm.`role_id` = r.`role_id` 
        AND
          rm.`menu_id` = m.`menu_id` 
        AND
          m.`menu_id` = #{id,jdbcType=BIGINT}
  </select>
  
  <!-- 根据Example查询角色并查询菜单 -->
  <select id="selectRelatedRoleByExample" parameterType="RoleExample" resultMap="MenuRoleResultMap">
      select 
    <if test="distinct">
      distinct 
    </if>
    <include refid="Related_Role_Column_List"/>
      FROM
        `mybatis_role_menu` rm,  
        `mybatis_role` r, 
        `mybatis_menu` m 
    <if test="_parameter != null">
      <include refid="Related_Role_Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by m.${orderByClause}
    </if>
  </select>
  
   <!-- 菜单管理子菜单查询的ResultMap -->
    <resultMap id="MenuMenuResultMap" type="Menu">
      <id property="id" column="menu_id" />
      <result property="create"  column="gmt_create"/>
      <result property="modified" column="gmt_modified"/>
      <result property="name" column="menu_name"/>
      <result property="order" column="menu_order"/>
      <result property="url" column="menu_url"/>
      <result property="parentId" column="menu_parent_id"/>
      <collection property="children" ofType="Menu" column="menu_id" select="findMenuByParentId"/>
    </resultMap> 

  <!-- 根据id查询菜单并返回子菜单 -->
  <select id="selectRootRelatedChildrenByPrimaryKey" resultMap="MenuMenuResultMap">
    SELECT 
    <include refid="Base_Column_List" />
    FROM `mybatis_menu` WHERE `menu_id` = #{value}
  </select>
    
  <!-- 查询根菜单并返回子菜单 -->
  <select id="selectRootRelatedChildren" resultMap="MenuMenuResultMap">
    SELECT  
    <include refid="Base_Column_List" />
    FROM `mybatis_menu` WHERE `menu_parent_id` = '' or `menu_parent_id` is NULL
  </select>
   
   <!-- 根据parentId查询菜单并返回子菜单 -->
   <select id="findMenuByParentId" parameterType="String" resultMap="MenuMenuResultMap">
       SELECT  
       <include refid="Base_Column_List" />
       from `mybatis_menu` where `menu_parent_id` = #{value}
   </select>
      
  <select id="selectByExample" parameterType="cn.zzs.mybatis.pojo.MenuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mybatis_menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mybatis_menu
    where menu_id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from mybatis_menu
    where menu_id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.zzs.mybatis.pojo.MenuExample">
    delete from mybatis_menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="cn.zzs.mybatis.pojo.Menu">
    <selectKey keyProperty="id" resultType="string" order="BEFORE">
        select replace(uuid(), '-', '') as menu_id;
    </selectKey>
    insert into mybatis_menu (menu_id, gmt_create, gmt_modified, 
      menu_name, menu_order, menu_url, menu_parent_id
      )
    values (#{id,jdbcType=VARCHAR}, #{create,jdbcType=TIMESTAMP}, #{modified,jdbcType=TIMESTAMP}, 
      #{name,jdbcType=VARCHAR}, #{order,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}
      )
  </insert>
  
  <insert id="insertSelective" parameterType="cn.zzs.mybatis.pojo.Menu">
    <selectKey keyProperty="id" resultType="string" order="BEFORE">
        select replace(uuid(), '-', '') as menu_id;
    </selectKey>
    insert into mybatis_menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        menu_id,
      </if>
      <if test="create != null">
        gmt_create,
      </if>
      <if test="modified != null">
        gmt_modified,
      </if>
      <if test="name != null">
        menu_name,
      </if>
      <if test="order != null">
        menu_order,
      </if>
      <if test="url != null">
        menu_url,
      </if>
      <if test="parentId != null">
        menu_parent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="create != null">
        #{create,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null">
        #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="order != null">
        #{order,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.zzs.mybatis.pojo.MenuExample" resultType="java.lang.Long">
    select count(*) from mybatis_menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mybatis_menu
    <set>
      <if test="record.id != null">
        menu_id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.create != null">
        gmt_create = #{record.create,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modified != null">
        gmt_modified = #{record.modified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.name != null">
        menu_name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.order != null">
        menu_order = #{record.order,jdbcType=INTEGER},
      </if>
      <if test="record.url != null">
        menu_url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        menu_parent_id = #{record.parentId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mybatis_menu
    set menu_id = #{record.id,jdbcType=VARCHAR},
      gmt_create = #{record.create,jdbcType=TIMESTAMP},
      gmt_modified = #{record.modified,jdbcType=TIMESTAMP},
      menu_name = #{record.name,jdbcType=VARCHAR},
      menu_order = #{record.order,jdbcType=INTEGER},
      menu_url = #{record.url,jdbcType=VARCHAR},
      menu_parent_id = #{record.parentId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zzs.mybatis.pojo.Menu">
    update mybatis_menu
    <set>
      <if test="create != null">
        gmt_create = #{create,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null">
        gmt_modified = #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        menu_name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="order != null">
        menu_order = #{order,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        menu_url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        menu_parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
    </set>
    where menu_id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zzs.mybatis.pojo.Menu">
    update mybatis_menu
    set gmt_create = #{create,jdbcType=TIMESTAMP},
      gmt_modified = #{modified,jdbcType=TIMESTAMP},
      menu_name = #{name,jdbcType=VARCHAR},
      menu_order = #{order,jdbcType=INTEGER},
      menu_url = #{url,jdbcType=VARCHAR},
      menu_parent_id = #{parentId,jdbcType=VARCHAR}
    where menu_id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>