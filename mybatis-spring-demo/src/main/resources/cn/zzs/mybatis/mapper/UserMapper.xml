<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zzs.mybatis.mapper.UserMapper">

  <resultMap id="BaseResultMap" type="User">
    <constructor>
      <idArg column="user_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="user_age" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="gmt_create" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="gmt_modified" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="user_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_role_id" javaType="java.lang.Long" jdbcType="BIGINT" />
    </constructor>
  </resultMap>
  
  <!-- 关联查询角色的ResultMap -->
   <resultMap id="UserRoleResultMap" type="User">
      <id property="id" column="user_id" />
      <result property="name"  column="user_name"/>
      <result property="age" column="user_age"/>
      <result property="create" column="gmt_create"/>
      <result property="modified" column="gmt_modified"/>
      <result property="roleId" column="user_role_id"/>
      <association property="role" javaType="role">
           <id property="id" column="role_id"/>
          <result property="name" column="role_name"/>
          <result property="create" column="a"/>
          <result property="modified" column="b"/>
      </association>
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List">
    user_id, user_age, gmt_create, gmt_modified, user_name, user_role_id
  </sql>
  
  <!-- 关联查询Role的查询字段 -->
  <sql id="Related_Role_Column_List">
          u.`user_id`,
          u.`user_age`,
          u.`gmt_create`,
          u.`gmt_modified`,
          u.`user_name`,
          u.`user_role_id`,
          r.`role_id`,
          r.`gmt_create` a,
          r.`gmt_modified` b,
          r.`role_name` 
  </sql>
  
  <!-- 关联查询Role的Example条件拼接语句 -->
   <sql id="Related_Role_Example_Where_Clause">
    <where>
        and u.`user_role_id` = r.`role_id`  
      <trim prefix="and(" suffix=")">  
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and u.${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and u.${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and u.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and u.${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
      </trim>
    </where>
  </sql>
  
  <!-- 根据id查询用户并查询角色 -->
  <select id="selectRelatedRoleByPrimaryKey" parameterType="java.lang.Long" resultMap="UserRoleResultMap">
      SELECT 
  <include refid="Related_Role_Column_List" />
		FROM
		  `mybatis_user` u,`mybatis_role` r 
		WHERE 
		  u.`user_role_id` = r.`role_id` 
		AND
		  u.`user_id` = #{id,jdbcType=BIGINT}
  </select>
  
  <!-- 根据Example查询用户并查询角色 -->
  <select id="selectRelatedRoleByExample" parameterType="UserExample" resultMap="UserRoleResultMap">
      select 
    <if test="distinct">
      distinct 
    </if>
    <include refid="Related_Role_Column_List"/>
    from `mybatis_user` u,`mybatis_role` r  
    <if test="_parameter != null">
      <include refid="Related_Role_Example_Where_Clause" />
    </if>
    <if test="_parameter != null">
      where u.`user_role_id` = r.`role_id`  
    </if>	
    <if test="orderByClause != null">
      order by u.${orderByClause} 
    </if>
  </select>
  
  <select id="selectByExample" parameterType="UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mybatis_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mybatis_user
    where user_id = #{id,jdbcType=BIGINT}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from mybatis_user
    where user_id = #{id,jdbcType=BIGINT}
  </delete>
  
  <delete id="deleteByExample" parameterType="UserExample">
    delete from mybatis_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="User">
    insert into mybatis_user (user_id, user_age, gmt_create, 
      gmt_modified, user_name, user_role_id
      )
    values (#{id,jdbcType=BIGINT}, #{age,jdbcType=INTEGER}, #{create,jdbcType=TIMESTAMP}, 
      #{modified,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, #{roleId,jdbcType=BIGINT}
      )
  </insert>
  
  <insert id="insertSelective" parameterType="User">
    insert into mybatis_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        user_id,
      </if>
      <if test="age != null">
        user_age,
      </if>
      <if test="create != null">
        gmt_create,
      </if>
      <if test="modified != null">
        gmt_modified,
      </if>
      <if test="name != null">
        user_name,
      </if>
      <if test="roleId != null">
        user_role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="create != null">
        #{create,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null">
        #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  
  <select id="countByExample" parameterType="UserExample" resultType="java.lang.Long">
    select count(*) from mybatis_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExampleSelective" parameterType="map">
    update mybatis_user
    <set>
      <if test="record.id != null">
        user_id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.age != null">
        user_age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.create != null">
        gmt_create = #{record.create,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modified != null">
        gmt_modified = #{record.modified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.name != null">
        user_name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null">
        user_role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByExample" parameterType="map">
    update mybatis_user
    set user_id = #{record.id,jdbcType=BIGINT},
      user_age = #{record.age,jdbcType=INTEGER},
      gmt_create = #{record.create,jdbcType=TIMESTAMP},
      gmt_modified = #{record.modified,jdbcType=TIMESTAMP},
      user_name = #{record.name,jdbcType=VARCHAR},
      user_role_id = #{record.roleId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByPrimaryKeySelective" parameterType="User">
    update mybatis_user
    <set>
      <if test="age != null">
        user_age = #{age,jdbcType=INTEGER},
      </if>
      <if test="create != null">
        gmt_create = #{create,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null">
        gmt_modified = #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        user_name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        user_role_id = #{roleId,jdbcType=BIGINT},
      </if>
    </set>
    where user_id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="User">
    update mybatis_user
    set user_age = #{age,jdbcType=INTEGER},
      gmt_create = #{create,jdbcType=TIMESTAMP},
      gmt_modified = #{modified,jdbcType=TIMESTAMP},
      user_name = #{name,jdbcType=VARCHAR},
      user_role_id = #{roleId,jdbcType=BIGINT}
    where user_id = #{id,jdbcType=BIGINT}
  </update>
</mapper>